<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="c_bootstrap_html">
 <title>Bootstrap HTML</title>
 <shortdesc>Make community content available to search engine crawlers.</shortdesc>
  <prolog>
    <metadata>
      <othermeta name="solution" content="Experience Manager"/>
    </metadata>
  </prolog>
 <conbody>
    <p>For a complete list of available endpoints, please see the Livefyre <xref
        href="http://livefyre-devhub-production.herokuapp.com/developers/api-reference/"
        format="html" scope="external">API Reference</xref> section.</p>
    <p>Livefyre Apps require that you execute JavaScript on your page to display content for your
      Collections. Because most search engine crawlers cannot execute JavaScript, they are unable to
      see the content that your community posts. Use the Bootstrap HTML API to add searchable
      fragments of this content to the initial HTTP response of your page, allowing your content and
      keywords to improve your search engine optimization.</p>
    <note>This API is available only for Comments and Live Blog Collection types.</note>
    <section id="section_ryy_fqj_11b">
      <title>Integration</title>
      <p>Livefyre’s Bootstrap HTML API will return an HTML fragment of your user content, that may
        be included in the page’s HTTP response. This response will be readable by search engine
        crawlers without executing any JavaScript. Once the page is live in a user’s browser, the
        HTML fragment will be replaced with the full, interactive widget, and the user will be able
        to post content.</p>
      <p>To implement the Bootstrap HTML API:</p>
      <ol id="ol_tpn_12l_wz">
        <li>
          <p>Make a server to server API request to the Bootstrap HTML endpoint documented below. </p>
          <note>
            <p>If you’re trying to grab the Bootstrap HTML for a conversation that does not yet
              exist (that is, if you have yet to embed the App or create the Collection), you will
              receive a 200, but with content that looks something like: <codeph>&lt;!– HTTP 404
                /example.fyre.co/000000/MTEwMTo2NDEyOD1RS/bootstrap.html –></codeph></p>
          </note>
        </li>
        <li>If your return does not include content with a “404” in it, save it into a string. You
          may cache this response for later use to avoid requesting the Bootstrap HTML API on every
          pageload.</li>
        <li>Insert the Bootstrap HTML string into your webpage where you’d like the content to
          appear.</li>
        <li>Serve your webpage to the browser (or search engine crawler).</li>
      </ol>
    </section>
    <section id="section_ezj_2qj_11b">
      <title>Resource</title>
      <codeblock>GET https://{networkName}.bootstrap.fyre.co/bs3/{networkName}.fyre.co/{siteId}/{base64 encoded article ID}/bootstrap.html
</codeblock>
    </section>
    <section id="section_y34_dqj_11b">
      <title>Parameters</title>
      <dl>
        <dlentry>
          <dt>networkName</dt>
          <dd>Your Livefyre provided network name. For example: <i>labs</i> in labs.fyre.co.</dd>
        </dlentry>
        <dlentry>
          <dt>siteId</dt>
          <dd>The Site ID of the Collection.</dd>
        </dlentry>
        <dlentry>
          <dt>b64articleId</dt>
          <dd>The Article ID of the Collection using the base64url encoding.</dd>
        </dlentry>
      </dl>
    </section>
    <section id="section_k5z_bqj_11b">
      <title>Example</title>
      <codeblock>https://labs.bootstrap.fyre.co/bs3/labs.fyre.com/4/NTg0/bootstrap.html
</codeblock>
    </section>
    <section id="section_e5t_zpj_11b">
      <title>Response</title>
      <codeblock>https://gist.github.com/ec5c2457322faf9cf515
</codeblock>
    </section>
 </conbody>
</concept>
