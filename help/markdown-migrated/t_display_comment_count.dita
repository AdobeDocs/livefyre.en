<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_display_comment_count">
    <title>Display Comment Count</title>
    <shortdesc>Grab the post and comment counts for certain collections to display on your index
        pages. </shortdesc>
    <prolog>
        <metadata>
            <othermeta name="solution" content="Experience Manager"/>
        </metadata>
    </prolog>
    <taskbody>
        <context>
            <p>Livefyre’s <codeph>CommentCount.js</codeph> allows you to fetch the content counts
                for collections on your site. Although Apps will show the comment count for the
                current collection, having these counts syndicated across your site can be useful.
                This feature is especially useful if you don’t persist content in your database (or
                if your CMS database is not synced with Livefyre).</p>
        </context>
        <steps>
            <step>
                <cmd>Load the JavaScript.</cmd>
                <info>
                    <p>To use <codeph>CommentCount.js</codeph>, first embed the JavaScript file in
                        the <codeph>&lt;head></codeph> section of the page or template where you’d
                        like to use it.</p>
                    <codeblock>&lt;script
   type="text/javascript"
   data-lf-domain="{network name (domain.fyre.co)}"
   src="//cdn.livefyre.com/libs/commentcount/v1.0/commentcount.js">
&lt;/script></codeblock>
                </info>
            </step>
            <step>
                <cmd>Bind the HTML Element.</cmd>
                <info>
                    <p>Once the script is loaded, it will attempt to find other elements on the page
                        with a class name of<codeph> livefyre-commentcount</codeph>. For each of
                        these elements, the script will look for <codeph>data-lf-site-id</codeph>
                        and <codeph>data-lf-article-id</codeph> HTML attributes, and will use these
                        to fetch content from Livefyre and update each element with the latest
                        value.</p>
                    <p>For example, the following element would be updated:</p>
                    <codeblock>&lt;span class="livefyre-commentcount" data-lf-site-id="{site_id}" data-lf-article-id="{article_id}">
0 Comments 
&lt;/span></codeblock>
                    <note importance="high">The <codeph>CommentCount.js</codeph> code checks for a
                        numeric value to update with the actual count. Be certain to include a
                        numeric value between the tags.</note>
                    <p><b>Example 1</b> (Using the URL as the article ID):</p>
                    <codeblock>&lt;span class="livefyre-commentcount" data-lf-site-id="311458" data-lf-article-id="http://mikesoldner.com/blog.php"> 
0 Comments 
&lt;/span></codeblock>
                    <p><b>Example 2</b> (Using a numbered system as the article ID):</p>
                    <codeblock>&lt;span class="livefyre-commentcount" data-lf-site-id="311458" data-lf-article-id="25"> 0 Comments &lt;/span></codeblock>
                </info>
            </step>
            <step importance="optional">
                <cmd>Configure Options.</cmd>
                <info>
                    <p>For more control over how the content counts are replaced, call
                            <codeph>LF.CommentCount()</codeph> and pass in an object containing the
                        configuration options. Make sure to call the function after all of the
                        elements that need to be replaced are in the DOM. The best place to call
                        this method is in the footer, so it happens when the DOM is loaded, but
                        prior to document and window ready events.</p>
                    <p>We allow the following configuration options:</p>
                    <dl>
                        <dlentry>
                            <dt>replacer:</dt>
                            <dd>Function or Regex used to replace the text of each content
                                count.</dd>
                        </dlentry>
                        <dlentry>
                            <dt>function:</dt>
                            <dd>Used to do the replacement on each element. The function’s arguments
                                are:</dd>
                            <dd><b>element: </b>The HTML element that is being updated.</dd>
                            <dd><b>count: </b>The content count for this element.</dd>
                        </dlentry>
                        <dlentry>
                            <dt>regex:</dt>
                            <dd>Used to determine which part of the element’s text should be
                                replaced by the count.</dd>
                        </dlentry>
                    </dl>
                    <p><b>Example</b>:</p>
                    <codeblock>
&lt;script type="text/javascript"> LF.CommentCount({
     replacer: function(element, count) {
         element.innerHTML = count +' Comment'+ (count === 1 ? '' : 's');
     }
 });
&lt;/script></codeblock>
                    <note>Use the replacer to customize or internationalize the comment count
                        message.</note>
                </info>
            </step>
        </steps>
    </taskbody>
</task>
