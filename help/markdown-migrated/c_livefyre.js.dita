<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="c_livefyre.js">
 <title>Livefyre.js</title>
 <shortdesc>The core Livefyre library used to power Livefyre on your site.</shortdesc>
  <prolog>
    <metadata>
      <othermeta name="solution" content="Experience Manager"/>
    </metadata>
  </prolog>
 <conbody>
    <p>On this page:</p>
    <ul id="ul_f55_rrd_fcb">
      <li>
        <xref href="#c_livefyre.js/section_cst_twg_xz" format="dita"/>
      </li>
      <li>
        <xref href="#c_livefyre.js/section_ipq_hwg_xz" format="dita"/>
      </li>
      <li>
        <xref href="#c_livefyre.js/section_ygd_dwg_xz" format="dita"/>
      </li>
      <li>
        <xref href="#c_livefyre.js/section_pgm_dpg_xz" format="dita"/>
      </li>
    </ul>
  <p>Livefyre.js is the core library that you can install on every Livefyre-enabled webpage. It
      defines the global <codeph>window.Livefyre</codeph> object and a single public method,
        <codeph>Livefyre.require</codeph>, which can be used to load other Livefyre JavaScript
      libraries that help with <xref href="http://docs.livefyre.com/developers/app-integrations/"
        format="html" scope="external">embedding Livefyre Apps</xref>, <xref
        href="http://docs.livefyre.com/developers/identity-integration/" format="html"
        scope="external">integrating your authentication provider with Livefyre</xref>, and
      more.</p>
  <section id="section_cst_twg_xz">
   <title>Add to your Site</title>
   <p>Add the following <codeph>&lt;script></codeph> tag to your webpage or website template. If
        possible, add it to the <codeph>&lt;head></codeph> section of your HTML document so it loads
        quickly.</p>
   <codeblock>&lt;script src="//cdn.livefyre.com/Livefyre.js">&lt;/script></codeblock>
   <note>This script will embed a very small (~1 Kb) file called the Livefyre.js scout that will
    subsequently load the latest version of Livefyre.js over the protocol with which your webpage
    has been accessed (HTTP or HTTPS).</note>
  </section>
  <section id="section_ipq_hwg_xz">
   <title>Livefyre.require</title>
   <p><codeph>Livefyre.require</codeph> is a custom JavaScript module loader like <xref
     href="https://github.com/cujojs/curl" format="html" scope="external">curl.js</xref> or <xref
     href="http://requirejs.org/" format="html" scope="external">RequireJS</xref>. It can be used to
    load most packages published by Livefyre and presents a convenient and intuitive integration
    path.</p>
   <p>Packages accessible through <codeph>Livefyre.require</codeph> are versioned using <xref
     href="http://semver.org/" format="html" scope="external">Semantic Versioning</xref>. Packages
    can be required at a specific version or to a range of versions so your webpage can
    automatically benefit from new bugfixes features. This gives you flexibility when integrating
    Livefyre on your site. There are three levels of version pinning you can use with
     <codeph>Livefyre.require</codeph>.</p>
   <ul id="ul_oc1_swg_xz">
    <li><b>package-name#1:</b> Pin to major version v1. You’ll get all new updates that maintain a
     backward-compatible API. Pin to a major version to receive bug fixes and minor feature
     enhancements for that version.</li>
    <li><b>package-name#1.1:</b> Pin to minor version v1.1. You’ll get all bugfixes to this minor
     version. Livefyre Engineering will always bump the minor version of a package if its default
     behavior or functional scope changes in a way that could cause new, unexpected behavior on your
     webpage. Pin to a minor version if you wish to receive automated bug fixes, but no additional
     functionality or changes to default behavior.</li>
    <li><b>package-name#1.1.1:</b> Pin to patch version v1.1.1. The behavior of this embed will
     never change, even if there are bugfixes. Pin to a patch version if you have extensive CSS
     customizations for your site that depend on a package’s markup structure that may change, or if
     you have other reasons to prefer that the Livefyre version you are running will not change in
     any way.</li>
   </ul>
   <p>An example integration using <codeph>Livefyre.require</codeph> could look like this:</p>
   <codeblock>
&lt;!-- First add Livefyre.js to the page -->
&lt;script src="https://cdn.livefyre.com/Livefyre.js">&lt;/script>
 
&lt;!-- Then load up all the desired Livefyre packages and Do Stuff in the callback -->
&lt;script>
Livefyre.require([
    'lfawesome#1',
    'lfsuperawesome#2.1.2'
], function (LFAwesome, LFSuperAwesome) {
    var greatness = new LFAwesome();
    // etc..
});
&lt;/script></codeblock>
  </section>
  <section id="section_ygd_dwg_xz">
   <title>Available packages</title>
   <p>Wondering which Livefyre JavaScript packages are available through<codeph>
     Livefyre.require</codeph>? You can always find an up-to-date list of supported packages and
    their latest versions here: <xref href="https://cdn.livefyre.com/packages.html" format="html"
     scope="external">packages.html</xref>.</p>
  </section>
  <section id="section_pgm_dpg_xz">
   <title>Testing pre-release Versions of Packages</title>
   <p>Sometimes you may want to test an upcoming version of a Livefyre package to make sure it will
    work on your website or to acceptance test a feature that is being developed at your request. In
    addition to including a Semantic Version range, the prerelease UAT environment can be
    specified.</p>
   <p>For example, the following would require the UAT release of fyre.conv, the Comments, Live
    Blog, and Chat applications.</p>
   <codeblock>Livefyre.require(['fyre.conv#uat'], callback);
</codeblock>
  </section>
 </conbody>
</concept>
