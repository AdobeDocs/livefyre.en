<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="c_authorization_package">
 <title>Authentication Package</title>
 <shortdesc>Install the Authentication Package to enable user authentication so users can interact
  with your apps.</shortdesc>
 <prolog>
  <metadata>
   <othermeta name="solution" content="Experience Manager"/>
  </metadata>
 </prolog>
 <conbody>
  <p>Livefyre Apps use the global auth package to associate users with App actions. The auth package
   is available through <codeph>Livefyre.require</codeph>.</p>
  <p>To enable authentication on your page, first add <codeph>Livefyre.js</codeph> to the
    <codeph>&lt;head></codeph> element of your webpage or website template.</p>
  <codeblock>&lt;script src="//cdn.livefyre.com/Livefyre.js">&lt;/script></codeblock>
  <p>Using Livefyre.require to enable auth is similar to using require to call other packages. The
   integration code to require auth looks like this:</p>
  <codeblock>Livefyre.require(['auth'], function (auth) { 
// Perform action...
});</codeblock>
  <section id="section_ojx_1lz_fz">
   <title>Methods</title>
   <p>Once included as above using <codeph>Livefyre.require</codeph>, the Auth module exposes the
    following methods that you can call to notify other Apps on the page about
    authentication-related events.</p>
   <table frame="all" rowsep="1" colsep="1" id="table_zlx_1mz_fz">
    <title>Methods</title>
    <tgroup cols="2">
     <colspec colname="c1" colnum="1" colwidth="1.0*"/>
     <colspec colname="c2" colnum="2" colwidth="1.0*"/>
     <thead>
      <row>
       <entry>Method</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><codeph>.login(callback)</codeph></entry>
       <entry>Trigger the login flow as implemented by the registered AuthDelegate. Usually only
        auth-enabled Apps will call this, and not the host page itself.</entry>
      </row>
      <row>
       <entry><codeph>.logout(callback)</codeph></entry>
       <entry>Notify auth that the end-user has logged out by some external means, and that all
        relying Apps should clear their authentication state until the next login. This will clear
        the internal session maintained by Auth.</entry>
      </row>
      <row>
       <entry><codeph>.authenticate(credentials)</codeph></entry>
       <entry>
        <p>Notify Auth that a user has authenticated by some external means, and a Livefyre
         Authentication Token has been procured for the end-user. Use this if you set a cookie with
         the Livefyre token, or have a token for the user and want to explicitly log the user in.
         For example:
         <codeblock>auth.authenticate({ livefyre: '&lt;insert lftoken string for newly logged-in user>' });</codeblock></p>
       </entry>
      </row>
      <row>
       <entry><codeph>.delegate(authDelegate)</codeph></entry>
       <entry>Delegate the implementation details of authentication (for example, your custom
        authentication flow) to an object that you define. This must be called by the host page to
        enable interactive features of Livefyre Apps.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </section>
 </conbody>
</concept>
