<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dita PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<dita>
  <concept id="c_settings">
    <title>Settings</title>
    <shortdesc><draft-comment author="ind14750" otherprops="merge"
      >c_settings.dita</draft-comment>Use Network and Site Settings to set moderation, filtering,
      and other settings.</shortdesc>
    <conbody>
      <p>With settings you can set up credentials, localize text for a site, and perform
        administrator tasks.</p>
    </conbody>
  </concept>
  <concept id="c_how_requesting_rights_works">
    <title><draft-comment author="ind14750" otherprops="merge"
        >c_how_requesting_rights_works.dita</draft-comment>How Requesting Rights Works</title>
    <shortdesc>When you bring user-generated content (UGC) into a Livefyre App, the content includes
      tacit permission for reuse. You cannot use content from Twitter or Instagram for other
      purposes without the author’s permission.</shortdesc>
    <conbody>
      <p>The following rights statuses are available from Library Assets, App Content, ModQ, and AEM
        Commerce:</p>
      <ul id="ul_ukh_515_p1b">
        <li><uicontrol>Granted</uicontrol>. When the author grants you the right to reuse their
          content, the status of the asset changes to <uicontrol>Granted</uicontrol>.</li>
        <li>
          <p><uicontrol>Expired</uicontrol>. Livefyre monitors the Instagram and Twitter stream for
            the author’s reply for 14 days. After 14 days, the request expires, the rights request
            status changes to<uicontrol> Expired</uicontrol>, and you can send a second request or
            remove the item from your Library.</p>
        </li>
        <li>
          <p><uicontrol>Requested</uicontrol>. Request permission for content from the Library. You
            can do this for one or more assets at a time. After you request permission, Livefyre
            sets the asset status to <uicontrol>Requested</uicontrol>.</p>
        </li>
        <li><uicontrol>Needs Review</uicontrol>. If the author replies with a note that does not
          include your #approvalHashtag, the status of the asset changes to <uicontrol>Needs
            Review</uicontrol>.</li>
        <li><uicontrol>Request Failed</uicontrol>. Request failed to be sent (due to expired token,
          etc.). </li>
        <li><uicontrol>Request Pending</uicontrol>. Queues the Rights Request so that not too many
          are sent at one time.
          <!--How many and what intervals?ADD INFO FROM NISH: So, lets say Twitter allows 500 requests per minute per account
When a user makes bulk RR, we check for the current rate limit of the user account against the social provider and either make a right request or queue it
so if user RR for 100 UGC, but he only has 50 more requests left. 50 will be RR while other will be sent to queue.
Then a job runs every 5 mins, to check for queued RR and see if the rate limit is reset and cont
" Tweets: 2,400 per day. The daily update limit is further broken down into smaller limits for semi-hourly intervals. Retweets are counted as Tweets."
You can find same information for other social providers--></li>
      </ul>
      <section id="section_iy1_dhx_cbb">
        <title>Managing Rights Requests</title>
        <p>You can manage Rights Requests in the following ways:</p>
        <ul id="ul_ynq_ghx_cbb">
          <li>Request Rights from the Library. For more information on how to request rights from
            the Library, see <xref href="#c_how_requesting_rights_works/section_npr_qmn_bbb"
              format="dita"/>.</li>
          <li>Request Rights from App Content. For more information on how to request rights from
            the App Content, see <xref href="#c_how_requesting_rights_works/section_cdp_hzl_dbb"
              format="dita"/>.</li>
          <li>Request Rights from ModQ. For more information on how to request rights from the ModQ,
            see <xref href="#c_how_requesting_rights_works/section_ays_qrn_bbb" format="dita"/></li>
          <li>Request Rights from AEM Commerce. For more information on how to request rights from
            AEM Commerce. See <xref
              href="t_request_rights_using_aem_assets.dita#t_request_rights_using_aem_assets"
            />.</li>
          <li>Search for content with a specific rights status in the Library or App Content to
            follow-up on previous rights requests. For more on how to manage content with previous
            rights requests, see <xref href="#c_how_requesting_rights_works/section_vd3_cnn_bbb"
              format="dita"/>. </li>
          <li>View the rights request history for a piece of content. For more information on how to
            view the history of rights requests for a piece of content, see <xref
              href="#c_how_requesting_rights_works/section_cj5_nxl_dbb" format="dita"/>.</li>
          <li>
            <p>Manually override the rights for one or more assets at a time. For more on how to
              manually grant rights, see <xref
                href="#c_how_requesting_rights_works/section_gpx_gnn_bbb" format="dita"/>.</p>
            <note>Overriding a rights request is stating that you own the content. Do not override a
              rights request without verifying that you own the content.</note>
          </li>
        </ul>
      </section>
      <section id="section_xzk_bmn_bbb">
        <title>Set up Rights Management</title>
        <p>Before you can define Rights Request Settings, you must configure one or more social
          accounts for Instagram or Twitter. For more information on how to configure a social
          account, see <xref href="c_social_accounts.dita#c_social_accounts">Social
          Accounts</xref>.</p>
        <note>You can configure rights management at the Network level only. You cannot configure
          site-specific rights management.</note>
        <ol id="ol_hrf_3mn_bbb">
          <li>Within Livefyre Studio, navigate to <uicontrol>Network </uicontrol><uicontrol>Settings
              > Rights Management</uicontrol>.<note>You will need Moderator or Administrator
              network-level permissions in order to set up Rights Management Accounts.</note></li>
          <li>Select <uicontrol>+Add New Account</uicontrol> if you do not have any Rights
            Management accounts set up. </li>
          <li>Click <uicontrol>Create New Setting</uicontrol>.</li>
          <li>Fill in the displayed fields. All fields are required.<ul id="ul_vst_4pk_yy">
              <li><uicontrol>Display name: </uicontrol> Enter a display name to identify the Twitter
                or Instagram account to use for your Rights Request account. This name is internal
                only.</li>
              <li><uicontrol>Enabled: </uicontrol>Set to on by default. Enables rights management
                for the account.</li>
              <li><uicontrol>Approval hashtag:</uicontrol> The hashtag that the content owner will
                use to indicate that they consent to use their content.</li>
              <li><uicontrol>Terms and conditions:</uicontrol> A link to your network’s Terms and
                Conditions for the reuse of content. This field is case sensitive.</li>
              <li><uicontrol>Network and sites:</uicontrol> The network or site for which this
                account can request content reuse rights. To make this account available across your
                entire network, select the first item in the list, or limit to specific sites using
                the Command/CTRL key.</li>
              <li><uicontrol>Default message:</uicontrol> A message to display with your Rights
                Request. You can override this message when you request rights.<ul
                  id="ul_wst_4pk_yy">
                  <li>
                    <p>Livefyre presents one of the default messages to moderators when a moderator
                      issues a request to a content author. Moderators can generate another default
                      message or edit the message before sending. Messages must include the author’s
                      Twitter or Instagram handle ({handle}), your approval hashtag ({grantTag}),
                      and a link to your Terms and Conditions ({termsLink}).</p>
                    <p><uicontrol>Note:</uicontrol> {handle}, {grantTag}, and {termsLink} are all
                      case sensitive.</p>
                    <p><uicontrol>Note:</uicontrol> To prevent malicious use, Twitter wraps any
                      included URLs with <xref href="http://t.co/" format="html" scope="external"
                        >t.co</xref> formatting. To prevent your default message from exceeding 140
                      characters, Livefyre recommends against including URLs in your default
                      message.</p>
                  </li>
                  <li>Best practices for writing rights request messages:<ul id="ul_xst_4pk_yy">
                      <li>Create multiple default messages so you don’t sound like a robot. Save
                        each default message prior to creating your next default message.</li>
                      <li>Encourage your moderators to personalize this note before sending, to
                        prevent your network’s requests from being tagged Spam.</li>
                    </ul></li>
                </ul></li>
            </ul></li>
          <li>Click <uicontrol>Save Settings</uicontrol> to add your Rights Request account.</li>
        </ol>
      </section>
      <section id="section_npr_qmn_bbb">
        <title>Send a Rights Request from the Library</title>
        <p>You can request the right to reuse the item for your commercial purposes from the
          Library.</p>
        <p>Before you can send a rights request you must:</p>
        <ul id="ul_qwq_rng_zz">
          <li>Add an Instagram or Twitter social account. For more information on how to configure a
            social account, see <xref href="c_social_accounts.dita#c_social_accounts">Social
              Accounts</xref>.</li>
          <li>Set up Rights Management. For more information on how to set up rights management, see
              <xref href="#c_how_requesting_rights_works/section_xzk_bmn_bbb" format="dita"/>.</li>
        </ul>
        <ol id="ol_qpp_tmn_bbb">
          <li>Click on <uicontrol>Library</uicontrol> to access the Asset Library.</li>
          <li>(Optional) Add content to folders using the Social Search.</li>
          <li>Open a folder and click on a piece of content that you saved from Twitter or
            Instagram. You can see where the content originated by looking at the icon on the piece
            of content. For example, a piece of content from Twitter has the Twitter logo on
            it.</li>
          <li>Click on the ellipsis icon that displays when you hover over the content card for
              <uicontrol>More Options</uicontrol>. </li>
          <li>Click <uicontrol>Rights</uicontrol> to open the <uicontrol>Rights options</uicontrol>
            window.</li>
          <li>Select the account to use to request rights.</li>
          <li>(Optional) Edit the request message. If the message is missing an element or a
            required element is misspelled, an error message displays that specifies the incorrect
            or missing information.</li>
          <li>Click <uicontrol>Send</uicontrol> to send the request to the owner of the
            content.</li>
        </ol>
      </section>
      <section id="section_cj5_nxl_dbb">
        <title>View Rights Activity History</title>
        <p>Livefyre keeps an audit trail of your rights activity. Specifically, Livefyre tracks:</p>
        <ul id="ul_kz1_rpj_fbb">
          <li>Requests sent to a social network user.</li>
          <li>Replies from a social network user on rights requests.</li>
          <li>Content status changes. Livefyre tracks which user changed the status and when they
            changed the status. </li>
          <!--<li>Content deleted from a social network. Livefyre tracks the social platform the content came from, the username and handle of the person who deleted the content and the time they deleted the content.</li><li>Content marked as private on a social network. Livefyre tracks the social platform the content came from, the username and handle of the person who marked the content as private and the time they changed the content to private.</li>-->
          <li>Notes entered by a user on a rights management request.</li>
          <li>System error messages.</li>
        </ul>
        <ol id="ol_d5c_whb_jbb">
          <li>Click on <uicontrol>Library</uicontrol> to access the Asset Library.</li>
          <li>(Optional) Add content to folders using the Social Search.</li>
          <li>Open a folder and click on a piece of content that you saved from Twitter or
            Instagram. You can see where the content originated by looking at the icon on the piece
            of content. For example, a piece of content from Twitter has the Twitter logo on
            it.</li>
          <li>Click on the ellipsis icon that displays when you hover over the content card for
              <uicontrol>More Options</uicontrol>. </li>
          <li>Click <uicontrol>Rights</uicontrol> to open the <uicontrol>Rights options</uicontrol>
            window.</li>
          <li>View the history under <uicontrol>Activity History</uicontrol>.</li>
        </ol>
      </section>
      <section id="section_cdp_hzl_dbb">
        <title>Send Rights Request from App Content</title>
        <p>
          <ol id="ol_e5c_whb_jbb">
            <li>Click on <uicontrol>Library</uicontrol>, then <uicontrol>App
              Content</uicontrol>.</li>
            <li>Click on a piece of content.</li>
            <li>Click <uicontrol>Actions</uicontrol> to open the <uicontrol>Actions</uicontrol>
              menu.</li>
            <li>Click <uicontrol>Advanced</uicontrol>.</li>
            <li>Click <uicontrol>OK</uicontrol> to save the content as an asset.</li>
            <li>Click the checkbox next to <uicontrol>Request Rights</uicontrol> in the
                <uicontrol>Advanced Options</uicontrol> window.</li>
            <li>Click <uicontrol>Save and Continue</uicontrol>.</li>
            <li>Select the account to use to request rights.</li>
            <li>(Optional) Edit the request message. If the message is missing an element or a
              required element is misspelled, an error message displays that specifies the incorrect
              or missing information.</li>
            <li>Click <uicontrol>Send</uicontrol> to send the request to the owner of the
              content.</li>
          </ol>
        </p>
      </section>
      <section id="section_ays_qrn_bbb">
        <title>Send Rights Request from ModQ</title>
        <ol id="ol_z3x_ddm_dbb">
          <li>Open <uicontrol>ModQ</uicontrol>.</li>
          <li>Click on the <uicontrol>Streams Premoderation</uicontrol> tab.</li>
          <li>Click the down arrow for <uicontrol>More Options</uicontrol> for a piece of
            content.</li>
          <li>Select the account to use to request rights.</li>
          <li>(Optional) Edit the request message.</li>
          <li>Click <uicontrol>Send Request</uicontrol> to send the request to the owner of the
            content.</li>
        </ol>
      </section>
      <section id="section_vd3_cnn_bbb">
        <title>Manage Content with a Pending Rights Request from the Asset Library</title>
        <p>See and modify the assets in Livefyre with a pending rights request.</p>
        <ol id="ol_omx_dnn_bbb">
          <li>Click on <uicontrol>Library</uicontrol> to access <uicontrol>All
            Assets</uicontrol>.</li>
          <li>Use the options in the <uicontrol>Rights</uicontrol> filter to choose a pending rights
            request status (<uicontrol>Requested</uicontrol>, <uicontrol>Needs Review</uicontrol>)
            for specific assets.</li>
          <li>Change the Rights Request status. See <xref
              href="#c_how_requesting_rights_works/section_npr_qmn_bbb" format="dita"/> for more on
            how to change Rights Request statuses in <uicontrol>All Assets</uicontrol>.</li>
        </ol>
      </section>
      <section id="section_ymr_zdk_fbb">
        <title>Manage Content with a Pending Rights Request from App Content</title>
        <p>See and modify the assets in Livefyre with a pending rights request.</p>
        <ol id="ol_zmr_zdk_fbb">
          <li>Click on <uicontrol>Library</uicontrol> to access <uicontrol>App
            Content</uicontrol>.</li>
          <li>Use the options in the <uicontrol>Rights</uicontrol> filter to choose a pending rights
            request status (<uicontrol>Requested</uicontrol>, <uicontrol>Needs Review</uicontrol>)
            for specific assets.</li>
          <li>Change the Rights Request status. See <xref
              href="#c_how_requesting_rights_works/section_cdp_hzl_dbb" format="dita"/> for more on
            how to change Rights Request statuses in <uicontrol>App Content</uicontrol>.</li>
        </ol>
      </section>
      <section id="section_gpx_gnn_bbb">
        <title>Manually Grant or Revoke Rights for an Asset from the Asset Library</title>
        <note>Manually granting rights on a piece of content is stating that you own the content. Do
          not manually grant rights without verifying that you own the content.</note>
        <ol id="ol_jkl_jnn_bbb">
          <li>Click on <uicontrol>Library</uicontrol> to access the <uicontrol>Asset
              Library</uicontrol>.</li>
          <li>Open a folder and click on a piece of content that you saved from Twitter or
            Instagram. You can see where the content originated by looking at the icon on the piece
            of content. For example, a piece of content from Twitter has the Twitter logo on
            it.</li>
          <li>Click on the ellipsis icon that displays when you hover over the content card for
              <uicontrol>More Options</uicontrol>. </li>
          <li>Click <uicontrol>Rights</uicontrol> to open the <uicontrol>Rights options</uicontrol>
            window.</li>
          <li>Click <uicontrol>Manually Grant Rights</uicontrol>. </li>
        </ol>
      </section>
      <section id="section_vbt_12k_fbb">
        <title>Manually Grant or Revoke Rights for an Asset from App Content</title>
        <note>Manually granting rights on a piece of content is stating that you own the content. Do
          not manually grant rights without verifying that you own the content.</note>
        <ol id="ol_wbt_12k_fbb">
          <li>Click on <uicontrol>Library</uicontrol> to access <uicontrol>App
            Content</uicontrol>.</li>
          <li>Click on a piece of content from Twitter or Instagram. You can see where the content
            originated by looking at the icon on the piece of content. For example, a piece of
            content from Twitter has the Twitter logo on it.</li>
          <li>Click <uicontrol>Advanced</uicontrol>.</li>
          <li>Click the checkbox next to <uicontrol>Request Rights</uicontrol> in the
              <uicontrol>Advanced Options</uicontrol> window.</li>
          <li>Click <uicontrol>Save and Continue</uicontrol>.</li>
          <li>Select Manually Grant Rights and enter a note explaining why you are manually granting
            rights.</li>
          <li>Click <uicontrol>Grant</uicontrol> to manually grant rights.</li>
        </ol>
      </section>
    </conbody>
  </concept>
  <task id="t_set_up_network_email">
    <title><draft-comment author="ind14750" otherprops="merge"
        >t_set_up_network_email.dita</draft-comment>Set up Network Email</title>
    <shortdesc>Customize available email notification fields.</shortdesc>
    <taskbody>
      <context id="context_zxb_yhb_jbb">
        <p><b>Email Notification Setup</b></p>
        <ul id="ul_y4b_rrk_yy">
          <li/>
          <li><b>Logo for Email: </b>select the file that will be used as the logo in customer email
            notifications.</li>
          <li><b>Email From: </b>enter the email address that will appear in the From field.
              (<b>Note: </b>If this field is blank, no email notifications will be sent.)</li>
          <li><b>Email Display Name: </b>enter the name that will appear in place of your email
            address in comment email notifications.</li>
        </ul>
      </context>
    </taskbody>
  </task>
  <task id="t_set_up_bans">
    <title><draft-comment author="ind14750" otherprops="merge">t_set_up_bans.dita</draft-comment>Ban
      IP Addresses</title>
    <shortdesc>You can ban IP addresses if a malicious user creates multiple accounts from the same
      IP address.</shortdesc>
    <taskbody>
      <context id="context_sjs_b3b_jbb">
        <p><image href="https://answers.livefyre.com/wp-content/uploads/2015/11/Bans-1024x239.png"
            height="239" width="1024" id="image_fqb_mpk_yy"/></p>
        <p>If a banned user begins to realize that no one is seeing their comments, they may decide
          to create a new user account, with a different username and avatar, and begin posting
          inappropriate or spam comments from this new, unbanned account. Your moderators may
          recognize the content as the same user, and verify this assumption by checking the IP
          address of the user posting the comments (from the Account Details page).</p>
        <!--HRK 5/9/17 download image into correct folder and reimport-->
      </context>
      <steps id="steps_tjs_b3b_jbb">
        <step>
          <cmd>Click <uicontrol>+ IP Address</uicontrol> in the Banned IPs panel.</cmd>
        </step>
        <step>
          <cmd>Enter the IP Address in the field. To Ban a range of IP addresses, enter the range in
            the format “192.168.0.1 – 192.168.0.10” (separate the IP addresses by spaces and a dash
            all in quotes) and click <uicontrol>Save</uicontrol>.</cmd>
        </step>
        <step>
          <cmd>Select an action from the pulldown menu (Trash, Premoderate, or Bozo content).</cmd>
        </step>
        <step>
          <cmd>Click the checkmark to save.</cmd>
        </step>
      </steps>
    </taskbody>
  </task>
  <task id="t_set_up_user_sync">
    <title><draft-comment author="ind14750" otherprops="merge"
        >t_set_up_user_sync.dita</draft-comment>User Sync</title>
    <shortdesc>User Sync allows you to enter the endpoint used to fetch user profile data from your
      user management system.</shortdesc>
    <taskbody>
      <context id="context_cxr_mjb_jbb">
        <p>See Identity Integration > Your Identity Service for more information on how Livefyre
          uses this URL to sync your user data with Livefyre through Ping for Pull.</p>
        <p><b>Custom User Profile Sync</b></p>
        <ul id="ul_rnf_prk_yy">
          <li>
            <p><b>Profile Sync URL:</b> enter the URL from which Livefyre will fetch your updated
              user profile information.</p>
            <p>For example: https://example.yoursite.com/some_path/?id={<i><b>id</b></i>}</p>
          </li>
        </ul>
      </context>
    </taskbody>
  </task>
  <task id="t_add_a_site">
    <title><draft-comment author="ind14750" otherprops="merge">t_add_a_site.dita</draft-comment>Add
      a Site to a Network</title>
    <shortdesc>You can add new sites to your network for domains and subdomains that share the same
      user profiles. </shortdesc>
    <taskbody>
      <context id="context_mmc_qjb_jbb">
        <p>You can add and display up to 1,200 sites in Studio. Sites are listed alphabetically.</p>
        <p>To add a new site to your network:</p>
      </context>
      <steps id="steps_nmc_qjb_jbb">
        <step>
          <cmd>click the <uicontrol>Network </uicontrol> item from the Studio menu bar to open the
              <uicontrol>Select Network or Site</uicontrol> panel.</cmd>
        </step>
        <step>
          <cmd> Use the search field to search for sites, or click <uicontrol>Add new
              site</uicontrol> to add a new one. </cmd>
          <info>
            <p>This panel lists all sites included within the selected network.</p>
          </info>
        </step>
        <step>
          <cmd>Enter a <uicontrol>Name</uicontrol> and <uicontrol>URL</uicontrol> in the fields
            provided, and click <uicontrol>Add Site</uicontrol>.</cmd>
        </step>
      </steps>
    </taskbody>
  </task>
  <task id="t_set_up_credentials">
    <title><draft-comment author="ind14750" otherprops="merge"
        >t_set_up_credentials.dita</draft-comment>Set up Credentials</title>
    <shortdesc/>
    <taskbody>
      <context id="context_nq4_rjb_jbb"><b>Credentials</b><p>The Credentials panel displays your
          Livefyre Network and Site Credentials. These fields will be populated by Livefyre during
          your integration process, and are available here for your reference. New Sites added
          through Studio will also be included in this page. These values are
          read-only.</p><b>Network Credentials</b><p><b>Note: </b>Your Network Key is used
            <b>only</b> to generate userAuth tokens and is not used for any other API calls. When
          constructing collectionMeta tokens, the Site Key is used. For more information, see
          Developers > Getting Started > <xref
            href="https://answers.livefyre.com/developers/getting-started/tokens/auth/"
            format="html" scope="external">Building a User Auth Token</xref>.</p><ul
          id="ul_chd_lrk_yy">
          <li>Network Domain</li>
          <li>Network Key</li>
        </ul><b>Site Credentials (per site)</b><p><b>Note: </b>Enter your site in the Search field
          to populate these fields.</p><ul id="ul_dhd_lrk_yy">
          <li>Site Name</li>
          <li>Site URL</li>
          <li>Site ID</li>
          <li>Site Key</li>
        </ul></context>
    </taskbody>
  </task>
  <concept id="c_social_accounts">
    <title><draft-comment author="ind14750" otherprops="merge"
        >c_social_accounts.dita</draft-comment>Social Accounts</title>
    <shortdesc>Configure a Social Account in Settings to gather content from Instagram or Twitter to
      use in Livefyre Apps.</shortdesc>
    <conbody>
      <p>Configure social accounts to:</p>
      <ul id="ul_en5_spk_yy">
        <li>Perform social search on Instagram</li>
        <li>Create stream rules on Instagram</li>
        <li>Send rights requests to users on Twitter and Instagram.</li>
      </ul>
    </conbody>
  </concept>
</dita>
