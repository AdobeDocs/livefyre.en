<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="c_javascript_events">
 <title>JavaScript Events Definitions and Examples</title>
 <shortdesc>The events available to which you can bind JavaScript for conversation Apps (for
    example, Comments, Chat, Live Blog, Reviews, and Sidenotes).</shortdesc>
   <prolog>
      <metadata>
         <othermeta name="solution" content="Experience Manager"/>
      </metadata>
   </prolog>
 <conbody>
  <p>Livefyre provides JavaScript events to track user activity in your Livefyre Apps. For example,
   you may wish to update the page when users like or share content to Twitter or Facebook, or when
   new content is posted.</p>
  <p>Livefyre also allows you to add events to third-party analytics integrations (Adobe Analytics
      JS, Google Analytics, Dynamic Tag Management, etc.), to track App events. For more
      information, work with your third-party integration manager to supply the correct events.</p>
  <p>To bind to these events, add the following code to the page when instantiating your App on a
      page. Substitute the event name for <codeph>{eventName}</codeph>:</p>
  <codeblock>
Livefyre.require(['fyre.conv#3'], function(Conv) {
   new Conv(networkConfig, [convConfig], function(widget) {
      widget.on('{eventName}', function (data) {
         // Do something, perhaps using data
      });
   });
});</codeblock>
  <note>Data objects are provided for all event handlers. Example data objects follow each
   event.</note>
  <section id="section_qfr_51p_xz">
   <title>commentPosted</title>
   <p>A user posted a comment.</p>
   <ul id="ul_i1g_5pl_wz">
    <li>A parent of null is a new comment.</li>
    <li>A parent of None is a comment that has been edited.</li>
    <li>A number for parent is the parent ID of the reply.</li>
   </ul>
   <codeblock>data = {
   authorId: "_u2012@livefyre.com" // The ID of the author of the comment 
   parent: "893549" 
      // The ID of the comment that this new comment is in reply to, else null
   bodyHtml: "&lt;p>42&lt;/>" // The HTML of the submitted Content
   sharedToFacebook:true // Whether the comment was also posted to Facebook
   sharedToTwitter:false // Whether the comment was also posted to Twitter
   title: "demo title" // The title of the review (exists only for Reviews)
   rating: [90] // Array of ratings for the review (exists only for Reviews)
}
</codeblock>
  </section>
  <section id="section_szy_s1p_xz">
   <title>commentFlagged</title>
   <p>A user flagged a comment.</p>
   <codeblock>data = {
   targetId: "789347" // The ID of the comment that was flagged
   type: ["disagree"] // The type of flag
   notes: ["I don't entirely agree with this post"] // A note/reason for the flag
}</codeblock>
  </section>
  <section id="section_vc1_r1p_xz">
   <title>commentLiked</title>
   <p>A user liked a comment.</p>
   <codeblock>data = {
   targetId: "245625" // The ID of the comment that was liked
   targetAuthorId: "i_am_author@livefyre.com" 
      // The ID of the author of the comment that was liked
}
</codeblock>
  </section>
  <section id="section_nqb_31p_xz">
   <title>commentShared</title>
   <p>A user shared a comment from the stream. (This event does not fire when users share from the
    Comment editor.) This event is triggered when the Share button is clicked.</p>
   <codeblock>data = {
   targetId: "256255" // The ID of the comment that was shared
   sharedToFacebook:false // Whether the comment was shared to Facebook
   sharedToTwitter:true // Whether the comment was shared to Twitter
}</codeblock>
  </section>
  <section id="section_qdq_f1p_xz">
   <title>commentCountUpdated</title>
   <p>The total number of visible comments in this conversation has changed (either incremented or
    decremented).</p>
   <codeblock>data: 34 // The total number of visible comments in the conversation (integer).
</codeblock>
  </section>
  <section id="section_yjt_vz4_xz">
   <title>userLoggedIn</title>
   <p>A user has logged in.</p>
   <codeblock>data = {
   avatar: "http://gravatar.com/avatar/50.jpg" 
      // Link to logged in user's avatar image
   displayName: "NewUser" // Display name of the logged in user
   id: "newuser@livefyre.com" // ID of the logged in user
   isModerator:false // Boolean indicating whether logged in user is a moderator
}</codeblock>
  </section>
  <section id="section_tsg_5z4_xz">
   <title>userLoggedOut</title>
   <p>A user has logged out.</p>
   <p>data is undefined.</p>
  </section>
  <section id="section_a1w_tz4_xz">
   <title>socialMention</title>
   <p>A user included an @mention in a comment. Returns an array of the following:</p>
   <codeblock>data = {
   id: '111111@fb.gw.livefyre.com' // ID of the mentioned user
   displayName: 'testUser' // Display name of mentioned user
   message: "@testUser Wow, I can't believe it either!" 
      // Message that was sent to the particular user
   provider: 'twitter' // Provider to which the mention was shared
}
</codeblock>
  </section>
  <section>
   <title>commentFeatured</title>
   <p>A moderator user featured a comment. Returns an array of the following:</p>
   <codeblock>
data = {
   targetId: "134234" // The ID of the comment that was featured
   targetAuthorId: "i_am_author@livefyre.com" 
      // The ID of the author of the comment that was featured
}</codeblock>
  </section>
  <section id="section_odc_4z4_xz">
   <title>initialRenderComplete</title>
   <p>The comment stream has loaded, and the initial set of content has been fetched from the server
    and displayed to the user.</p>
   <p>data is undefined.</p>
  </section>
  <section id="section_pqg_nz4_xz">
   <title>showMore</title>
   <p>A user clicked the <uicontrol>Show More</uicontrol> button.</p>
   <p>data is undefined.</p>
  </section>
  <section id="section_xxw_jz4_xz">
   <title>userFollowed</title>
   <p>Returns true when a user clicks the <uicontrol>Follow</uicontrol> button, and false when
    content is posted to the stream.</p>
   <codeblock>
data = {
   id: 'authorId@livefyre.com',
   optIn: true
}</codeblock>
  </section>
  <section id="section_wm1_gz4_xz">
   <title>userUnfollowed</title>
   <p>Returns true when a user clicks the <b>Unfollow</b> button, and false when content is posted
    to the stream.</p>
   <codeblock>
data = {
   id: 'authorId@livefyre.com',
   optOut: true
}</codeblock>
  </section>
 </conbody>
</concept>
