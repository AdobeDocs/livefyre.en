<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="c_convconfig_object">
 <title>ConvConfig Object</title>
 <shortdesc>The <codeph>convConfig</codeph> object is a JSON object used to specify the content that
  the Livefyre App renders on the page. </shortdesc>
 <prolog>
  <metadata>
   <othermeta name="solution" content="Experience Manager"/>
  </metadata>
 </prolog>
 <conbody>
  <note>The <codeph>convConfig</codeph> object parameters listed here do not apply for the Reviews
   app. For integration information about the Reviews app using the <codeph>convConfig</codeph>
   object, see Reviews Integration.</note>
  <p>The <codeph>ConvConfig</codeph> object contains the following required parameters:</p>
  <table frame="all" rowsep="1" colsep="1" id="table_adq_qy5_nz">
   <tgroup cols="3">
    <colspec colname="c1" colnum="1" colwidth="1.0*"/>
    <colspec colname="c2" colnum="2" colwidth="1.0*"/>
    <colspec colname="c3" colnum="3" colwidth="1.0*"/>
    <thead>
     <row>
      <entry>Parameter</entry>
      <entry>Type</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><varname>articleId</varname></entry>
      <entry>String (required)</entry>
      <entry>
       <p>Uniquely identifies a Collection within your Site. Usually, this corresponds to a database
        primary key or Post ID within your CMS. For example: “post-42”. 255 character limit.</p>
       <note>If you use the article URL as your articleId, make certain the string is MD5 or SHA-1
        encoded.</note>
      </entry>
     </row>
     <row>
      <entry><codeph>authPageReload</codeph></entry>
      <entry>(optional) Boolean </entry>
      <entry>Applies to Comments App: Allows you to control whether a user’s comment is stored
       locally during the auth process. If true, if a user enters a comment, and then logs into the
       App, the comment will be stored locally, and will be re-entered in the content field after
       login and page refresh. If false, entered content will be wiped during the login process, and
       must be retyped.</entry>
     </row>
     <row>
      <entry><varname>collectionMeta</varname></entry>
      <entry>String (required) </entry>
      <entry>JWT-encoded metadata about the Collection. See CollectionMeta Object for more
       information.</entry>
     </row>
     <row>
      <entry><varname>el</varname></entry>
      <entry>String (required) </entry>
      <entry>The ID of a DOM element to which the content stream will render.</entry>
     </row>
     <row>
      <entry><varname>siteId</varname></entry>
      <entry>String (required)</entry>
      <entry>The Livefyre-provided ID for the website or application to which the Collection
       belongs. For example: “303617”.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <note>The <codeph>app</codeph> parameter is not required for a Comments App implementation.</note>
  <p>The <codeph>ConvConfig</codeph> object may also contain the following optional parameters:</p>
  <table frame="all" rowsep="1" colsep="1" id="table_wlc_bz5_nz">
   <tgroup cols="3">
    <colspec colname="c1" colnum="1" colwidth="1.0*"/>
    <colspec colname="c2" colnum="2" colwidth="1.0*"/>
    <colspec colname="c3" colnum="3" colwidth="1.0*"/>
    <thead>
     <row>
      <entry>Parameter</entry>
      <entry>Type</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><varname>actionButtons</varname></entry>
      <entry>Array (optional) </entry>
      <entry>An array of custom action buttons to add to a piece of content next to the
        <uicontrol>Share</uicontrol> and <uicontrol>Flag</uicontrol> buttons. For more information,
       see Adding Custom Buttons.</entry>
     </row>
     <row>
      <entry><varname>animations</varname></entry>
      <entry>Boolean (optional)</entry>
      <entry>Defines whether animations will run within the Livefyre App. Set to false to disable
       animations. Defaults to true.</entry>
     </row>
     <row>
      <entry><varname>anonymousFlaggingEnabled</varname></entry>
      <entry>Boolean (optional) </entry>
      <entry>Defines whether guest users have the option to flag content. Default is true.</entry>
     </row>
     <row>
      <entry><varname>browserType</varname></entry>
      <entry>String (optional) </entry>
      <entry>Defines the device for which display content should be generated. This will cause the
       CSS, and some functionality, to change to fit the input device type. Options are desktop,
       mobile, or tablet. (If left blank, will default to the Google Agent determination for the
       display format.)</entry>
     </row>
     <row>
      <entry><varname>checksum</varname></entry>
      <entry>String (recommended)</entry>
      <entry>Identifies the current state of the CollectionMeta. Changing this value will cause
       Livefyre to update the data on the server with the new values in CollectionMeta.</entry>
     </row>
     <row>
      <entry><varname>datetimeFormat</varname></entry>
      <entry>
       <p>(Optional)</p>
       <p>String</p>
       <p>Object </p>
       <p>Function </p>
      </entry>
      <entry>Specifies the datetime format of streamed content. For more information, see
       Customizing Date and Time Stamps.</entry>
     </row>
     <row>
      <entry><varname>disableAvatars</varname></entry>
      <entry>Boolean (optional) </entry>
      <entry>Prevents avatars from being rendered in the App stream, and thus reduces the number of
       items loaded into the browser. Default is false.</entry>
     </row>
     <row>
      <entry><varname>disableIE8Shim</varname></entry>
      <entry>Boolean (optional)</entry>
      <entry>
       <p>Disables the default shiv used by Livefyre to polyfill Internet Explorer 8 so that HTML5
        elements are supported. Livefyre uses the following project: <xref
         href="https://github.com/aFarkas/html5shiv" format="html" scope="external"
         >https://github.com/aFarkas/html5shiv</xref>. Default is false.</p>
       <note>If this value is false, polyfill of some sort must be used before Livefyre Chat is
        invoked for Internet Explorer 8 support.</note>
      </entry>
     </row>
     <row>
      <entry><varname>disableThirdPartyAnalytics</varname></entry>
      <entry>Boolean (optional) </entry>
      <entry>Disables third party analytics systems (Quantserve and Google Analytics) that Livefyre
       may use for internal measurements. Default is false.</entry>
     </row>
     <row>
      <entry><varname>editorCss</varname></entry>
      <entry>Object (optional) </entry>
      <entry>
       <p>Used to customize the comment editor styling. You may style the editor field background
        color as well as the font color, size, and family of the text that appears inside the
        editor. </p>
       <p>For example: {background: ‘#ccc’, color: ‘red’, font: ’30px “Helvetica Neue”, Helvetica,
        Arial, Geneva, sans-serif’}</p>
      </entry>
     </row>
     <row>
      <entry><varname>initialNumVisible</varname></entry>
      <entry>Integer (optional)</entry>
      <entry>Allows you to set the default number of comments visible in your App upon load. This
       may be an integer from 1 to 50.</entry>
     </row>
     <row>
      <entry><varname>initialNumVisibleLegacy</varname></entry>
      <entry>integer (optional) </entry>
      <entry>
       <p>Allows you to set the default number of legacy content items visible in your App upon
        load. This may be an integer from 1 to 50. If this parameter is not specified, defaults to
        initialNumVisible.</p>
       <p>For example: If your Collection includes 100 active and 100 legacy comments, set
        initalNumVisible:10, and initialNumVisibleLegacy:5, to display 10 active comments (with a
         <uicontrol>Show More</uicontrol> button) + 5 archive comments (with a <uicontrol>Show
         More</uicontrol> button).</p>
      </entry>
     </row>
     <row>
      <entry><varname>maxVisible</varname></entry>
      <entry>Integer (optional) </entry>
      <entry>Sets the maximum number of visible pieces of top-level content in the Chat App. If new
       pieces of content stream in, content at the bottom of the stream will be removed from the
       page. If the <uicontrol>Show more…</uicontrol> button is clicked, the parameter is ignored
       and the user is free to show as much content as desired. (Use this parameter to control the
       number of items that appear on the page in high velocity streams.)</entry>
     </row>
     <row>
      <entry><varname>postToButtons</varname></entry>
      <entry>Array (optional) </entry>
      <entry>Used to configure which providers appear when embedding the Live Blog App. Available
       options are <codeph>tw</codeph> (Twitter), <codeph>fb</codeph> (Facebook), and
        <codeph>li</codeph> (LinkedIn). Defaults to [<codeph>tw</codeph>,
       <codeph>fb</codeph>].</entry>
     </row>
     <row>
      <entry><varname>readOnly</varname></entry>
      <entry>Boolean (optional) </entry>
      <entry>Disables all interactivity for the Collection. When true, users will be unable to log
       into the stream, and unable to Post, Edit, Reply to, or Like content. When true, users will
       be able to Flag and Share content. Default is false.</entry>
     </row>
     <row>
      <entry><varname>stream</varname></entry>
      <entry>Object (optional) </entry>
      <entry>Contains options to configure streaming of the App.</entry>
     </row>
     <row>
      <entry><varname>stream.catchup</varname></entry>
      <entry>Integer (optional) </entry>
      <entry>Specifies the number of seconds previous to the present moment that the stream should
       load. By default, Livefyre loads 50 pieces of content, and then loads all content submitted
       between those and the present time. In very fast use cases, content may be posted too quickly
       to allow the App to ‘catch up’ to the present. Use this setting to define the number of
       seconds previous to now for which content will be posted (after the initial content
       load).</entry>
     </row>
     <row>
      <entry><varname>stream.delay</varname></entry>
      <entry>Integer (optional) </entry>
      <entry>
       <p>Specifies the number of seconds between streaming requests. Use this parameter to help
        control the flow of content and delay how often the DOM is updated. </p>
       <note>If set too large, the stream may fall behind.</note>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <note>You can pass one or more <codeph>convConfig</codeph> objects during App initialization to
   display multiple Apps on the same page. Be aware that extra Apps use browser resources and
   performance may degrade as the number increases.</note>
 </conbody>
</concept>
