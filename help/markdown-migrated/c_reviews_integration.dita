<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="c_reviews_integration">
 <title>Reviews Integration</title>
 <shortdesc>Allow customers to rate and review your product offerings.</shortdesc>
 <prolog>
  <metadata>
   <othermeta name="solution" content="Experience Manager"/>
  </metadata>
 </prolog>
 <conbody>
  <p>Reviews allows members of your community to contribute star ratings and qualitative reviews for
   any product or service. </p>
  <section id="section_kk5_15b_c1b">
   <title>Integration</title>
   <p>To integrate a Reviews App, follow the procedure for Integrating a Conversation App. See <xref
     href="c_implement_a_conversation_app.dita#concept_zvy_c3c_tbb"/>. The following is an example
    of an embedded Reviews App.</p>
   <p><b>Example:</b></p>
   <codeblock>
var networkConfig = {
   network: "client-solutions-uat.fyre.co"
};
 
var convConfig = {
   siteId: '304059',
   articleId: 'sh_col_22_1373478370_reviews',
   el: 'livefyre-comments',
   app: 'reviews',
   ratingSummaryEnabled: true,
   maxRating: 5,
   collectionMeta: 'eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9.eyJ1cmwiOiAiaHR0cDovL3d3dy5kaXJlY3R2LmNvbS9wZXJzb24vQW5uYS1QYXF1aW4tYjJGU0wwZHJLM051YldjOS1yZXZpZXdzIiwgInNpdGVJZCI6ICIzMDQwNTkiLCAiYXJ0aWNsZUlkIjogInNoX2NvbF8yMl8xMzczNDc4MzcwX3Jldmlld3MiLCAidHlwZSI6ICJyZXZpZXdzIiwgInRpdGxlIjogIlRCX1BhcXVpbl9yYXRpbmdzX3Jldmlld3MifQ.hes3KMwygCG-fFDQlkaB-XlxGjW6-iZ68xA4RRGqUl0'
};
 
Livefyre.require(['fyre.conv#3'], function (Review) {
   new Review(networkConfig, [convConfig], function (reviewWidget) {});
   auth.delegate({
      login: function (callback) {
         callback(null,{livefyre:'&lt;userauthtoken>'});
      },
   });
});</codeblock>
   <p>As noted in the Building <codeph>CollectionMeta</codeph> section,
     <codeph>CollectionMeta</codeph> is an encoded JSON object. In the above example, the JSON
    object takes the following format before it’s JWT encoded:</p>
   <codeblock>{
"url": "http://www.directv.com/person/Anna-Paquin-b2FSL0drK3NubWc9-reviews", 
"siteId": "304059", 
"articleId": "sh_col_22_1373478370_reviews", 
"type": "reviews", 
"title": "TB_Paquin_ratings_reviews"
}</codeblock>
  </section>
  <section id="section_pzv_ytb_c1b">
   <title>convConfig Object</title>
   <p>If you’ve already completed the Getting Started section you should be familiar with convConfig
    object. To enable Reviews, update the convConfig with the following fields:</p>
   <dl>
    <dlentry>
     <dt>alwaysShowEditor:</dt>
     <dd><b>(optional) Boolean</b> By default, the reviews editor appears only after the user
      presses the “write review” button. Set this parameter to true to always display the
      editor.</dd>
    </dlentry>
    <dlentry>
     <dt>app:</dt>
     <dd><b>(required) string </b>The App name to use for reviews. Must be “reviews“.</dd>
    </dlentry>
    <dlentry>
     <dt>defaultSort:</dt>
     <dd><b>(optional) </b><b>string </b>Allows you to select the default sort option for Reviews.
      Possible values are: mostHelpful, highestRated, lowestRated, newest, and oldest.</dd>
    </dlentry>
    <dlentry>
     <dt>disableTitle:</dt>
     <dd><b>(optional) Boolean </b>Disables and hides the title field in the reviews editor, which
      is required and visible by default. Default is true.</dd>
    </dlentry>
    <dlentry>
     <dt>enableHalfRating:</dt>
     <dd><b>(optional) Boolean</b> Used to enable half ratings on the default star selection module.
      Default is true.</dd>
    </dlentry>
    <dlentry>
     <dt>hideShowReviewButton:</dt>
     <dd><b>(optional) Boolean </b>Controls whether the <b>Show My Review</b> button will be
      displayed. Set to true to allow your users to select whether to show or display their own
      reviews.</dd>
    </dlentry>
    <dlentry>
     <dt>maxRating:</dt>
     <dd><b>(optional) integer</b> Used to set the number of stars that are shown on the default
      star selection module. Default is 5. This can be configured up to 100.</dd>
    </dlentry>
    <dlentry>
     <dt>ratingSummaryEnabled:</dt>
     <dd><b>(optional) </b><b>Boolean</b> Used to show the rating summary view above the Reviews
      App. This must be enabled to use the ratingSummaryDelegate. Default is true.</dd>
    </dlentry>
   </dl>
  </section>
  <section id="section_k1s_sqb_c1b">
   <title>Review Collection Metadata</title>
   <dl>
    <dlentry>
     <dt>type:</dt>
     <dd><b>(required) string </b>Defines the Collection type. Must be
      “<codeph>reviews</codeph>“.</dd>
    </dlentry>
    <dlentry>
     <dt>ratingDimensions:</dt>
     <dd><b>(optional) array</b> An array of strings for each type of dimension that this Collection
      will use. If this is not specified, only 1 dimension will be allowed.</dd>
     <dd>For example, to allow users to rate your product on ‘design’, ‘features’, and
      ‘performance’, set the array to: <codeph>ratingDimensions: [‘design’, ‘features’,
       ‘performance’]</codeph></dd>
    </dlentry>
    <dlentry>
     <dt>ratingSubparts:</dt>
     <dd><b>(optional) integer </b>Number of partitions to display in the review’s text box. The
      subpart labels are passed in with the parameter as illustrated below.</dd>
     <dd><b>Note: </b>You must define labels for each subpart. </dd>
    </dlentry>
    <dlentry>
     <dt>ratingSubpartsIds:</dt>
     <dd><b>(optional) array </b>Allows you to define an ID for each subpart in your Ratings
      Collection, which may be used to target these subpart elements in your CSS and JavaScript.
      When users post reviews, each <codeph>ratingSubpart</codeph> will have the
       “<codeph>data-lf-subpart-id</codeph>” attribute on it, populated with this ID.</dd>
    </dlentry>
   </dl>
   <note>To use <codeph>ratingSubpartsIds</codeph>, the <codeph>ratingSubparts</codeph> param must
    also be defined, and the length of the two arrays must match.</note>
   <codeblock>
networkConfig["strings"] = {
   ratingSubpartPlaceholders: ['Pros...', 'Cons...'],
   ratingSubpartTitles: ['Pros:', 'Cons:'],
   ratingSubpartIds: ['pros', 'cons'],
   reviewStreamTitle: 'Description:'
}
fyre.conv.load(networkConfig, [{
   app: 'reviews',
   ratingSubparts: 2,
    ... // More conv config settings
}]);</codeblock>
   <note>If you’re using <codeph>ratingDimensions</codeph>, you MUST use the
     <codeph>ratingSelectionDelegate</codeph>, <codeph>ratingDisplayDelegate</codeph>, and
     <codeph>ratingSummaryDelegate</codeph> (if you want to show the rating summary).</note>
  </section>
  <section id="section_khz_xmb_c1b">
   <title>Reviews Customization</title>
   <p><b>Configure Star Images</b></p>
   <p>To change the image for full stars, the class is “<codeph>goog-ratings-star</codeph>“. Change
    the background image to whatever image you’d like. By default, stars are 28 by 28 pixels.</p>
   <p><b>Configure Star Images with Half Stars</b>
   </p>
   <p>With half stars, there are two classes, one for each side of the star. The left side of the
    half star is “<codeph>fyre-rating-half-odd</codeph>” and the right side is
     “<codeph>fyre-rating-half-even</codeph>“. By default, half stars are 28 by 14 pixels.</p>
   <p><b>Configure the Tooltip Values for Stars</b></p>
   <p>To configure the tooltip values for the stars, follow the custom text described in String
    Customizations. Once you have that set up, use the key “<codeph>ratingValues</codeph>” and the
    value an array that contains the tooltip strings. If you have half stars disabled, the number of
    elements in the array should be the same as <codeph>maxRating</codeph> (above). If you have half
    stars enabled, the number of elements should be 2x<codeph> maxRating</codeph>. The first element
    in the array corresponds to the left-most star (or half star) element and continues left to
    right.</p>
   <p><b>Toggle the “Show My Review” Option</b>
   </p>
   <p>To toggle the “Show My Review” option on or off, target the
     <codeph>hideShowReviewButton</codeph> parameter in the App configuration.</p>
   <p><b>Show the Text Editor by Default</b></p>
   <p>The reviews editor appears only after the user presses the “write review” button. To show this
    form by default, target the <codeph>alwaysShowEditor</codeph> parameter in the App
    configuration.</p>
  </section>
 </conbody>
</concept>
