<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="t_add_custom_buttons">
    <title>Add Custom Buttons</title>
    <shortdesc>Add custom actions to your Livefyre Apps.</shortdesc>
    <prolog>
        <metadata>
            <othermeta name="solution" content="Experience Manager"/>
        </metadata>
    </prolog>
    <taskbody>
        <context>
            <p>Livefyre allows you add custom buttons next to the existing action buttons (like
                    <uicontrol>Share</uicontrol>, and <uicontrol>Flag</uicontrol>) on a piece of
                content.</p>
            <p>Use the mobile argument to define whether the button will be displayed on mobile
                devices.</p>
            <p>For example, to add a custom action button for your mobile device interface:</p>
            <codeblock>
var convConfig = {...}; // Should have siteId, articleId, etc.
convConfig.actionButtons = [
   {
      mobile: true, 
      // (optional) sets whether the button will appear on mobile devices
      key: 'Do Something',
      callback: function(contentInfo) {
         console.log('Author of content is ' + contentInfo.authorId);
         console.log('id of content is ' + contentInfo.contentId);
      }
   },
    ...
];
 
fyre.conv.load(networkConfig, [convConfig]);</codeblock>
        </context>
        <steps>
            <step>
                <cmd>Pass an additional argument in your ConvConfig object named actionButtons,
                    containing an array of objects describing each button you would like to
                    add.</cmd>
            </step>
            <step>
                <cmd>Define a key for the text to display for each button.</cmd>
            </step>
            <step>
                <cmd>Add a callback that will be invoked on a click event for each button. </cmd>
            </step>
        </steps>
        <result id="result_opf_clp_xz">The callback is invoked with an object with two keys:
                <codeph>authorId</codeph> and <codeph>contentId</codeph>.</result>
    </taskbody>
</task>
